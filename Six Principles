
1、 单一原则
正确划分类与函数的职责，不同的功能应该放到不同的类中。
 2 、开闭原则
软件中的对象对于扩展是开放的，对于修改是封闭的。尽可能通过接口的实现类的继承扩展功能。
 3、里氏替换
核心原理是抽象，抽象又依赖于继承，拥有继承的优缺点
 4、依赖倒置原则
高模块不应该依赖低模块，两者都应该依赖抽象
抽象不应该依赖细节
细节应该依赖抽象  模块间的依赖通过抽象发生，实现类之间不发生依赖关系
 5、 接口隔离原则
类间的依赖关系，应该建立在最小的接口上
 6、迪米特原则
一个对象应该对其他对象有最少的了解，只有直接的朋友通信
