https://blog.csdn.net/happy_love1990/article/details/79220986 // 接口的使用方法详细介绍



https://blog.csdn.net/hongbochen1223/article/details/52957421

>javah -d ../jni com.example.user.capp.Hello
 externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        ndk{
            moduleName "hello-lib"
            abiFilters "x86","x86_64","armeabi-v7a","arm64-v8a"
        }add_library( # Sets the name of the library.
             hello-lib   3个地方
https://blog.csdn.net/qq_25412055/article/details/79094919 加载视频并显示当前视频的帧图
https://github.com/sambhaji213/Horizontal-Recyclerview
https://github.com/xiangzhihong/jingdongApp
https://blog.csdn.net/qq_34662331/article/details/56671558
https://blog.csdn.net/qq_34662331/article/details/56672701

设置RecycleView的布局管理
LinearLayoutManager linearLayoutManager = new LinearLayoutManager (this,LinearLayoutManager.VERTICAL.false);
adapter.setLayoutManager(linearLayoutManager );
设置RecycleView的Item间分割线
adapter.addItemDecoration(new DividerItemDecoration(this,DividerIremDecoration.VERTICAL_LIST ))

public interface OnItemClickListener{
  void onItemClick(View view,int position);
   void onItemLongClick(View view,int position);
  
}

private OnitemClickListener mOnitemClickListener;

添加一个方法

public void setOnitemClickListener(OnitemClickListener listener){

this.mOnitemClickListener = listener;
}



创建回调的触发是在onBindViewHolder(参数final类型)

holder.intemView,setOnitemClickListener(new OnClicklistener()){

@Override
public void  onCick(view  view){
	mOnitemClickListener.onItemClick(holder对应参数);
}
}
然后在activity中即可通过adapter进行setOnitemClickListener方法的调用

intent=new Intent(TransmitDataActivity.this,MyActivity1.class);
//保存String类型的值
intent.putExtra("picturePath", "picturePath");

//获得String类型的值
String intentString=getIntent().getStringExtra("intent_string");


    public void initDrawble(){
        a = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_still_press, null);
        b = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_still_press, null);
        c = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_still_press, null);
    }
    public void setIma(ImageButton i1,ImageButton i2,ImageButton i3){
        im1.setImageDrawable(a);
        im2.setImageDrawable(b);
        im3.setImageDrawable(c);
	注意事项:

1.测试方法必须使用@test修饰
2.测试方法必须使用public void 进行修饰
3.新建一个代码目录来存放我们的测试代码
4.测试类包应该和我们的被测试包保持一致
5.测试单元中的方法必须可以独立测试,测试方法间不能有任何的依赖
6.测试类使用Test作为类的后缀名(不是必须)
7.测试方法使用test作为方法的前缀名(不是必须)

 *                 功能 一部分一天log上传一次，从aplication的onCreate方法开始。每隔一天发送自定义action一个广播，
 *                 在onReceiver方法中先判断上次上传的时间，上次report以sharePreference形式存储的，减去当前时间如果大于一天继续
 *                 否则结束，继续的话先判断WiFi是否连接，WiFi没有连接就注册广播，一旦连接继续，调用onreport方法，广播不能耗时操作
 *                 利用handler HandlerThread异步线程操作  具体逻辑中将以sharePreference存储的log
 *                 List<LinkedHashMap<String, String>>

